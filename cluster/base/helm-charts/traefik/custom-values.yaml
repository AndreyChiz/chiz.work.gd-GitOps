service:
  type: NodePort

ports:
  web:
    port: 8000
    expose:
      default: true
    exposedPort: 80
    nodePort: 30001

  websecure:
    port: 8443
    expose:
      default: true
    exposedPort: 443
    nodePort: 30000
 
  # traefik:
  #   port: 8080
  #   expose:
  #     default: true
  #   exposedPort: 8080
  #   protocol: TCP

# api:
#   dashboard: true
#   insecure: false

ingressRoute:
  dashboard:
    enabled: true
    # Custom match rule with host domain
    matchRule: Host(`dev.chiz.work.gd`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
    entryPoints: ["websecure"]
    tls:
      certResolver: letsencrypt

ingressClass:
  enabled: true

certificatesResolvers:
  letsencrypt:
    acme:
      email: "andrey.chizhov.dev@gmail.com"
      storage: /data/acme.json
      httpChallenge:
        entryPoint: web

providers:
  kubernetesIngress:
    enabled: true
  kubernetesGateway:
    enabled: false

### !!!
additionalArguments:
  - "--providers.kubernetesingress.ingressendpoint.publishedservice=traefik/traefik"

logs:
  general:
    level: INFO
  access:
    enabled: true

metrics:
  prometheus:
    enabled: true

persistence:
  enabled: true
  name: acme-storage
  accessMode: ReadWriteOnce
  size: 10Mi
  storageClass: traefik-static
  path: /data
  annotations: {}

deployment:
  initContainers:
    - name: volume-permissions
      image: busybox:latest
      command:
        - sh
        - -c
        - |
          echo "Fix permissions for /data...";
          mkdir -p /data;
          touch /data/acme.json;
          chown -R 65532:65532 /data;
          chmod 600 /data/acme.json;
      volumeMounts:
        - name: acme-storage
          mountPath: /data

extraObjects:
  - apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: traefik-static
    provisioner: kubernetes.io/no-provisioner

  - apiVersion: v1
    kind: PersistentVolume
    metadata:
      name: traefik-acme-pv
    spec:
      capacity:
        storage: 10Mi
      accessModes:
        - ReadWriteOnce
      storageClassName: traefik-static
      persistentVolumeReclaimPolicy: Delete
      hostPath:
        path: /mnt/data/traefik/acme

  - apiVersion: v1
    kind: Secret
    metadata:
      name: traefik-dashboard-auth-secret
      namespace: traefik
    type: kubernetes.io/basic-auth
    stringData:
      username: admin
      password: changeme

  - apiVersion: traefik.io/v1alpha1
    kind: Middleware
    metadata:
      name: traefik-dashboard-auth
      namespace: traefik
    spec:
      basicAuth:
        secret: traefik-dashboard-auth-secret

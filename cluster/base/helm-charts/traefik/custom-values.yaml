service:
  enabled: true
  type: NodePort
  annotations: {}
  labels: {}
  spec: {}

ports:
  web:
    port: 8000
    expose:
      default: true
    exposedPort: 80
    protocol: TCP
    nodePort: 30001 # üëà —Å–≤–æ–π NodePort

  websecure:
    port: 8443
    expose:
      default: true
    exposedPort: 443
    protocol: TCP
    nodePort: 30000 # üëà —Å–≤–æ–π NodePort

api:
  dashboard: true
  insecure: true # —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤, –∏–Ω–∞—á–µ –Ω—É–∂–µ–Ω auth

ingressRoute:
  dashboard:
    enabled: true
    entryPoints: ["web"]
    insecure: true
    matchRule: "PathPrefix(`/dashboard`) || PathPrefix(`/api`)"
    services: [{ "kind": "TraefikService", "name": "api@internal" }]

deployment:
  replicas: 1
  serviceAccount:
    create: true
    name: traefik
  additionalVolumes:
    - name: acme-data
      hostPath:
        path: /var/lib/traefik-data
        type: DirectoryOrCreate
  additionalVolumeMounts:
    - name: acme-data
      mountPath: /data
  additionalArguments:
    - "--api.dashboard=true"
    - "--api.insecure=true"
    - "--entrypoints.web.address=:80"
    - "--entrypoints.websecure.address=:443"
    - "--providers.kubernetescrd"
    - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
    - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entryPoint=web"
    - "--certificatesresolvers.letsencrypt.acme.email=andrey.chizhov.dev@gmail.com"
    - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
    - "--log.level=DEBUG"
    - "--accesslog=true"

# persistence:
#   enabled: true
#   type: emptyDir
#   size: 50Mi
#   mountPath: /data

persistence:
  enabled: false
  # type: hostPath
  # hostPath: /var/lib/traefik-data
  # mountPath: /data
  # accessMode: ReadWriteOnce

logs:
  access:
    enabled: true
